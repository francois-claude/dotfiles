# --------------------------------------------------------------------------------
# -- dotfiles --------------------------------------------------------------------
# --------------------------------------------------------------------------------
#           _..._
#         .'     '.      _
#        /    .-""-\   _/ \
#      .-|   /:.   |  |   |
#      |  \  |:.   /.-'-./
#      | .-'-;:__.'    =/
#      .'=  *=|NASA _.='
#     /   _.  |    ;         path..................: ~/.config/i3/config
#    ;-.-'|    \   |         description...........: i3 configuration file
#   /   | \    _\  _\        author................: fclaude
#   \__/'._;.  ==' ==\       edited................: 04-22-2021
#            \    \   |      repo..................: github.com/whoiscoos/dotfiles
#            /    /   /      notes.................: there's no place like ~/
#            /-._/-._/
#            \   `\  \
#             `-._/._/

# i3 config file (v4)



# // default font
# // -----------------------------------------
font pango:DejaVu Sans Mono 11



# // rofi theme
# // -----------------------------------------
set $rofiTheme /home/fclaude/.config/rofi/config.rasi



# // default window borders
# // -----------------------------------------
for_window [class=".*"] border pixel 5



# // default gaps
# // -----------------------------------------
gaps inner 20
gaps outer 5



# // mods
# // -----------------------------------------
# win-key
set $mod Mod4

# alt-key
set $alt Mod1



# // floating mod (mouse + mod)
# // -----------------------------------------
floating_modifier $mod



# // toggle floating
# // -----------------------------------------
# toggle tiling / floating
#bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
#bindsym $mod+space focus mode_toggle


# // floating windows
# // -----------------------------------------
for_window [class="gnome-screenshot"] floating enable
for_window [class="screenshotClass"] floating enable


# // toggle mode split
# // -----------------------------------------
# split horizontal
bindsym $mod+h split h

# split vertical
bindsym $mod+v split v



# // kill window
# // -----------------------------------------
bindsym $mod+Shift+q kill



# // toggle fullscreen mode
# // -----------------------------------------
bindsym $mod+f fullscreen toggle



# // toggle layout mode
# // -----------------------------------------
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split



# // container navigation
# // -----------------------------------------
# change focus (vim bindings)
#bindsym $mod+h focus left
#bindsym $mod+j focus down
#bindsym $mod+k focus up
#kbindsym $mod+l focus right

# change focus (cursor keys)
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window (vim bindings)
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# move focused window (cursor keys)
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right



# // screens
# // -----------------------------------------
set $lg_primary   "DisplayPort-1"
set $lg_secondary "DisplayPort-2"



# // workspace names
# // -----------------------------------------
# primary  ( ultrawide )
set $ws9  "9:Primary"
set $ws10 "10:School"
set $ws11 "11:Server"
set $ws12 "12:News"

# secondary ( portrait )
set $ws1  "1:Secondary"
set $ws2  "2:Email"
set $ws3  "3:Monitor"
set $ws4  "4:Spotify"
set $ws5  "5:Feeds"



# // workspace screens
# // -----------------------------------------
# primary  ( ultrawide )
workspace $ws9  output $lg_primary
workspace $ws10 output $lg_primary
workspace $ws11 output $lg_primary
workspace $ws12 output $lg_primary

# secondary ( portrait )
workspace $ws1  output $lg_secondary
workspace $ws2  output $lg_secondary
workspace $ws3  output $lg_secondary
workspace $ws4  output $lg_secondary
workspace $ws5  output $lg_secondary



# // workspace keys
# // -----------------------------------------
# primary  ( ultrawide )
set $ws9_key   "F9"
set $ws10_key  "F10"
set $ws11_key  "F11"
set $ws12_key  "F12"

# secondary ( portrait )
set $ws1_key  "F1"
set $ws2_key  "F2"
set $ws3_key  "F3"
set $ws4_key  "F4"
set $ws5_key  "F5"



# // workspace navigation
# // -----------------------------------------
# primary  ( ultrawide )
bindsym $mod+$ws9_key  workspace number $ws9
bindsym $mod+$ws10_key workspace number $ws10
bindsym $mod+$ws11_key workspace number $ws11
bindsym $mod+$ws12_key workspace number $ws12

# secondary ( portrait )
bindsym $mod+$ws1_key workspace number $ws1
bindsym $mod+$ws2_key workspace number $ws2
bindsym $mod+$ws3_key workspace number $ws3
bindsym $mod+$ws4_key workspace number $ws4
bindsym $mod+$ws5_key workspace number $ws5

# // move container to workspace

# primary  ( ultrawide )
bindsym $mod+Shift+$ws9_key  move container to workspace number $ws9
bindsym $mod+Shift+$ws10_key move container to workspace number $ws10
bindsym $mod+Shift+$ws11_key move container to workspace number $ws11
bindsym $mod+Shift+$ws12_key move container to workspace number $ws12

# secondary ( portrait )
bindsym $mod+Shift+$ws1_key move container to workspace number $ws1
bindsym $mod+Shift+$ws2_key move container to workspace number $ws2
bindsym $mod+Shift+$ws3_key move container to workspace number $ws3
bindsym $mod+Shift+$ws4_key move container to workspace number $ws4
bindsym $mod+Shift+$ws5_key move container to workspace number $ws5



# // launcher dialogs
# // -----------------------------------------
# mod + < return >                    // new kitty instance
bindsym $mod+Return exec /usr/bin/kitty

# mod + < shift > + < return >        // new browser window
bindsym $mod+Shift+Return exec --no-startup-id gtk-launch $(xdg-settings get default-web-browser)

# mod + < space >                     // rofi - default
bindsym $mod+space exec --no-startup-id /usr/bin/rofi -show drun -theme $rofiTheme

# mod + < shift > + < space >         // rofi - run
bindsym $mod+Shift+space exec --no-startup-id /usr/bin/rofi -show run -theme $rofiTheme

# mod + < ctrl > + < space >          // rofi - window ( by name )
bindsym $mod+Ctrl+space exec --no-startup-id /usr/bin/rofi -show window -theme $rofiTheme

# mod + < alt > + < space >           // rofi - search
bindsym $mod+$alt+space exec --no-startup-id /usr/bin/rofi -show find -modi find:/home/fclaude/.config/local/share/rofi/finder.sh

## Launch // Look Selector // <ï…º><Alt> l ##
# look_selector rofi -show look -modi look:/usr/share/rofi/modi/look-selector.sh



# // Launch at start
# // -----------------------------------------
# daemons
exec --no-startup-id /home/fclaude/.config/i3/scripts/launchers/i3_launch_daemons.sh

# polybar
exec_always --no-startup-id /home/fclaude/.config/polybar/launch.sh

# xset
exec --no-startup-id /home/fclaude/.config/i3/scripts/i3_set_screensaver_timeout.sh

# system tray
exec --no-startup-id /home/fclaude/.config/i3/scripts/launchers/i3_launch_system_tray.sh

# launch ws1
exec --no-startup-id /home/fclaude/.config/i3/scripts/launchers/i3_launch_ws1.sh

# launch ws2
exec --no-startup-id /home/fclaude/.config/i3/scripts/launchers/i3_launch_ws2.sh

# launch ws3
exec --no-startup-id /home/fclaude/.config/i3/scripts/launchers/i3_launch_ws3.sh

# launch ws4
exec --no-startup-id /home/fclaude/.config/i3/scripts/launchers/i3_launch_ws4.sh

# launch ws5
exec --no-startup-id /home/fclaude/.config/i3/scripts/launchers/i3_launch_ws5.sh

# launch ws9
exec --no-startup-id /home/fclaude/.config/i3/scripts/launchers/i3_launch_ws9.sh

# launch ws10
exec --no-startup-id /home/fclaude/.config/i3/scripts/launchers/i3_launch_ws10.sh

# launch ws11
exec --no-startup-id /home/fclaude/.config/i3/scripts/launchers/i3_launch_ws11.sh

# launch ws12
exec --no-startup-id /home/fclaude/.config/i3/scripts/launchers/i3_launch_ws12.sh


# // container assignments
# // -----------------------------------------
# ws9
# ws10
for_window [class="^zoom$"]                move --no-auto-back-and-forth container to workspace $ws10
for_window [class="^code-oss$"]            move --no-auto-back-and-forth container to workspace $ws10

# ws11 
# ws12 
#for_window [class="TweetDeck"] move --no-auto-back-and-forth container to workspace $ws12

# ws1
for_window [window_role="^ws1_spt$"]       move --no-auto-back-and-forth container to workspace $ws1
for_window [window_role="^ws1_cava$"]      move --no-auto-back-and-forth container to workspace $ws1
for_window [class="^discord$"]             move --no-auto-back-and-forth container to workspace $ws1
for_window [class="^Bitwarden$"]           move --no-auto-back-and-forth container to workspace $ws1
for_window [class="^zenClass$"]            move --no-auto-back-and-forth container to workspace $ws1
for_window [class="^TelegramDesktop$"]     move --no-auto-back-and-forth container to workspace $ws1
for_window [class="^Signal$"]              move --no-auto-back-and-forth container to workspace $ws1

# ws2
for_window [class="^Thunderbird$"]         move --no-auto-back-and-forth container to workspace $ws2

# ws3
for_window [window_role="^ws3_gotop$"]     move --no-auto-back-and-forth container to workspace $ws3
for_window [window_role="^ws3_lolcat$"]    move --no-auto-back-and-forth container to workspace $ws3

# ws4
for_window [window_role="^ws4_cava$"]      move --no-auto-back-and-forth container to workspace $ws4
for_window [class="^Spotify$"]             move --no-auto-back-and-forth container to workspace $ws4
for_window [window_role="^ws4_tty_clock$"] move --no-auto-back-and-forth container to workspace $ws4

# ws5



# // i3 Control
# // -----------------------------------------

# edit the configuration
bindsym $mod+Shift+e exec --no-startup-id /usr/bin/code --new-window /home/fclaude/.config/i3/config

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r exec "/usr/bin/killall picom; /usr/bin/sleep 3; /usr/bin/picom -b --config /home/fclaude/.config/picom/picom.conf" ; restart


# shutdown / restart / suspend...
set $mode_system    System (l) lock, (e) logout, (k) kill monitors, (h) halt system, (r) reboot, (f) firmware/BIOS
set $i3killmonitors "/home/fclaude/.config/i3/scripts/lock/i3_kill_monitors.sh"
mode "$mode_system" 
{
    bindsym l exec --no-startup-id /usr/bin/loginctl lock-session $XDG_SESSION_ID, mode "default"
    bindsym e exec --no-startup-id /usr/bin/loginctl terminate-session $XDG_SESSION_ID, mode "default"
    bindsym k exec --no-startup-id $i3killmonitors, mode "default"
    bindsym h exec --no-startup-id /usr/bin/systemctl poweroff -i, mode "default"
    bindsym r exec --no-startup-id "/usr/bin/sleep 2; /usr/bin/systemctl reboot", mode "default"
    bindsym f exec --no-startup-id /usr/bin/systemctl reboot --firmware-setup, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# mod + < backspace > // launch menu
bindsym $mod+BackSpace mode "$mode_system"


# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child



### SCREENSHOT TEST
set $mode_screenshot Screenshot: (s) select, (l) monitor-left, (r) monitor-right, (f) full
mode "$mode_screenshot"
{
    bindsym s exec --no-startup-id /usr/bin/flameshot gui --path=/home/fclaude/Pictures/screenshots, mode "default"
    bindsym l exec --no-startup-id /usr/bin/flameshot screen --path=/home/fclaude/Pictures/screenshots --number 1, mode "default"
    bindsym r exec --no-startup-id /usr/bin/flameshot screen --path=/home/fclaude/Pictures/screenshots --number 0, mode "default"
    bindsym f exec --no-startup-id /usr/bin/flameshot full --path=/home/fclaude/Pictures/screenshots, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym Print mode "$mode_screenshot"















# resize window (you can also use the mouse for that)
mode "resize" 
{
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the windowâ€™s width.
        # Pressing right will grow the windowâ€™s width.
        # Pressing up will shrink the windowâ€™s height.
        # Pressing down will grow the windowâ€™s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar 
#{
#        status_command i3status
#}

set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}



